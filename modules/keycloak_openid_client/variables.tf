variable "access_token_lifespan" {
  description = "(Optional) The amount of time in seconds before an access token expires. This will override the default for the realm."
  type        = string
  default     = ""
}

variable "access_type" {
  description = "Specifies the type of client: CONFIDENTIAL, PUBLIC or BEARER-ONLY"
  type        = string
}

variable "admin_url" {
  description = "(Optional) URL to the admin interface of the client."
  type        = string
  default     = ""
}

variable "authorization" {
  description = "(Optional) When this block is present, fine-grained authorization will be enabled for this client."
  type = object({
    allow_remote_resource_management = bool
    keep_defaults                    = bool
    policy_enforcement_mode          = string
  })
  default = null
}

variable "authentication_flow_binding_overrides" {
  description = "(Optional) Override realm authentication flow bindings"
  type = object({
    browser_id      = string
    direct_grant_id = string
  })
  default = null
}

variable "base_url" {
  description = "(Optional) The description of this client in the GUI."
  type        = string
  default     = ""
}

variable "client_id" {
  description = "The Client ID for this client, referenced in the URI during authentication and in issued tokens."
  type        = string
}

variable "client_secret" {
  description = "(Optional) The secret for clients with an access_type of CONFIDENTIAL or BEARER-ONLY. This value is sensitive and should be treated with the same care as a password. If omitted, this will be generated by Keycloak."
  type        = string
  default     = null
}

variable "consent_required" {
  description = "(Optional) When true, users have to consent to client access."
  type        = bool
  default     = false
}

variable "description" {
  description = "The description of this client in the GUI."
  type        = string
}

variable "direct_access_grants_enabled" {
  description = "(Optional) When true, the OAuth2 Resource Owner Password Grant will be enabled for this client."
  type        = bool
  default     = false
}

variable "enabled" {
  description = "(Optional) When false, this client will not be able to initiate a login or obtain access tokens."
  type        = bool
  default     = true
}

variable "exclude_session_state_from_auth_response" {
  description = "(Optional) When true, the parameter session_state will not be included in OpenID Connect Authentication Response."
  type        = bool
  default     = false
}

variable "full_scope_allowed" {
  description = "(Optional) Allow to include all roles mappings in the access token."
  type        = bool
  default     = false
}

variable "id" {
  description = "Unique identifier (UUID) used for AWS resources"
  type        = string
}

variable "implicit_flow_enabled" {
  description = "(Optional) When true, the OAuth2 Implicit Grant will be enabled for this client."
  type        = bool
  default     = false
}

variable "login_theme" {
  description = "(Optional) The client login theme. This will override the default theme for the realm."
  type        = string
  default     = null
}

variable "name" {
  description = "The display name of this client in the GUI."
  type        = string
}

variable "pkce_code_challenge_method" {
  description = "(Optional) The challenge method to use for Proof Key for Code Exchange. Can be either `plain` or `S256` or set to empty value ``."
  type        = string
  default     = null
}

variable "realm_id" {
  description = "The realm this client is attached to."
  type        = string
}

variable "region" {
  description = "AWS region used for remote state."
  type        = string
  default     = "us-east-2"
}

variable "root_url" {
  description = "(Optional) When specified, this URL is prepended to any relative URLs found within valid_redirect_uris, web_origins, and admin_url. NOTE: Due to limitations in the Keycloak API, when the root_url attribute is used, the valid_redirect_uris, web_origins, and admin_url attributes will be required."
  type        = string
  default     = ""
}

variable "service_accounts_enabled" {
  description = "(Optional) When true, the OAuth2 Client Credentials grant will be enabled for this client."
  type        = bool
  default     = false
}

variable "standard_flow_enabled" {
  description = "(Optional) When true, the OAuth2 Authorization Code Grant will be enabled for this client."
  type        = bool
  default     = false
}

variable "tags" {
  description = "Tags for AWS resources"
  type        = map(string)
  default = {
    Description = "https://github.com/deadlysyn/keycloakinator"
    Service     = "Keycloakinator Client"
  }
}

variable "valid_redirect_uris" {
  description = "(Optional) A list of valid URIs a browser is permitted to redirect to after a successful login or logout. Simple wildcards in the form of an asterisk can be used here. This attribute must be set if either standard_flow_enabled or implicit_flow_enabled is set to true."
  type        = list(string)
  default     = []
}

variable "web_origins" {
  description = "(Optional) A list of allowed CORS origins. + can be used to permit all valid redirect URIs, and * can be used to permit all origins."
  type        = list(string)
  default     = []
}
